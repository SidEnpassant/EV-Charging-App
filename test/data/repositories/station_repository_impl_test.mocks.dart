// Mocks generated by Mockito 5.4.6 from annotations
// in chargerrr/test/data/repositories/station_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chargerrr/data/datasources/remote/supabase_station_datasource.dart'
    as _i3;
import 'package:chargerrr/data/models/charging_station_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChargingStationModel_0 extends _i1.SmartFake
    implements _i2.ChargingStationModel {
  _FakeChargingStationModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SupabaseStationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseStationDataSource extends _i1.Mock
    implements _i3.SupabaseStationDataSource {
  MockSupabaseStationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ChargingStationModel>> getStations() =>
      (super.noSuchMethod(
            Invocation.method(#getStations, []),
            returnValue: _i4.Future<List<_i2.ChargingStationModel>>.value(
              <_i2.ChargingStationModel>[],
            ),
          )
          as _i4.Future<List<_i2.ChargingStationModel>>);

  @override
  _i4.Future<_i2.ChargingStationModel> getStationDetails(String? stationId) =>
      (super.noSuchMethod(
            Invocation.method(#getStationDetails, [stationId]),
            returnValue: _i4.Future<_i2.ChargingStationModel>.value(
              _FakeChargingStationModel_0(
                this,
                Invocation.method(#getStationDetails, [stationId]),
              ),
            ),
          )
          as _i4.Future<_i2.ChargingStationModel>);

  @override
  _i4.Future<_i2.ChargingStationModel> createStation(
    _i2.ChargingStationModel? station,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStation, [station]),
            returnValue: _i4.Future<_i2.ChargingStationModel>.value(
              _FakeChargingStationModel_0(
                this,
                Invocation.method(#createStation, [station]),
              ),
            ),
          )
          as _i4.Future<_i2.ChargingStationModel>);
}
