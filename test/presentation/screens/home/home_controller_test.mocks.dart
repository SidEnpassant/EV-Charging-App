// Mocks generated by Mockito 5.4.6 from annotations
// in chargerrr/test/presentation/screens/home/home_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:chargerrr/domain/entities/charging_station.dart' as _i4;
import 'package:chargerrr/domain/entities/user.dart' as _i6;
import 'package:chargerrr/domain/usecases/auth/get_current_user_usecase.dart'
    as _i5;
import 'package:chargerrr/domain/usecases/auth/logout_usecase.dart' as _i7;
import 'package:chargerrr/domain/usecases/station/get_stations_usecase.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetStationsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStationsUseCase extends _i1.Mock
    implements _i2.GetStationsUseCase {
  MockGetStationsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ChargingStation>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i3.Future<List<_i4.ChargingStation>>.value(
              <_i4.ChargingStation>[],
            ),
          )
          as _i3.Future<List<_i4.ChargingStation>>);
}

/// A class which mocks [GetCurrentUserUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentUserUseCase extends _i1.Mock
    implements _i5.GetCurrentUserUseCase {
  MockGetCurrentUserUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i6.User?> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i3.Future<_i6.User?>.value(),
          )
          as _i3.Future<_i6.User?>);
}

/// A class which mocks [LogoutUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUseCase extends _i1.Mock implements _i7.LogoutUseCase {
  MockLogoutUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
